<?xml version="1.0" encoding="UTF-8" ?>

<!--
    Document   : MediaItemManagementCreateDetailsJspGen.xsl
    Created on : 08 February 2003, 15:09
    Author     : jejking
    Description:
        Generates the base JSP xml source for the pages which are to 
        facilitate the entry of the media type specific details.
        The input xml is presumed to be the individual mediaTypeDetails.xml file
        generated by org.authorsite.bib.buildutil.xml2java.MediaTypeXMLSplitter.
        
 * Copyright (C) 2003  John King
 *
 * This file is part of the authorsite.org bibliographic
 * application.
 *
 * This application is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.        
-->

<xsl:stylesheet version="1.0" 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:html="/WEB-INF/struts-html.tld"
    xmlns:logic="/WEB-INF/struts-logic.tld"
    xmlns:bean="/WEB-INF/struts-bean.tld">
    
    <xsl:output method="xml"
                indent="yes"/>
    
    <!-- we make this a global variable so that we can easily access it in functions, attribute value templates, etc -->
    <xsl:variable name="capitalisedTypeName">
        <xsl:call-template name="capitaliseFirstLetter">
            <xsl:with-param name="word" select="mediaType/@name"/>
        </xsl:call-template>
    </xsl:variable>
                
    <xsl:template match="/">
    <doc xmlns:html="/WEB-INF/struts-html.tld"
     xmlns:logic="/WEB-INF/struts-logic.tld"
     xmlns:bean="/WEB-INF/struts-bean.tld">

     <ia>
        <title>
            <bean:message bundle="MEDIA_TYPES_KEY">
                <xsl:attribute name="key">
                    <xsl:value-of select="concat('web.management.createMediaItem.create', $capitalisedTypeName, 'Details.pageTitle')"/>
                </xsl:attribute>
             </bean:message>
        </title>
     </ia>
     <block id="main">
        <h1>
            <bean:message bundle="MEDIA_TYPES_KEY">
                <xsl:attribute name="key">
                    <xsl:value-of select="concat('web.management.createMediaItem.create', $capitalisedTypeName, 'Details.pageHeader')"/>
                </xsl:attribute>
            </bean:message>
        </h1>   
            
            <html:errors/>
            <html:form>
                <xsl:attribute name="action">
                    <xsl:value-of select="concat('/management/create', $capitalisedTypeName, 'Details')"/>
                </xsl:attribute>
            
                <table>
                   <!-- we now need to go through all the field attributes and build the input form -->
                   <xsl:for-each select="mediaType/field">
                        <tr>
                            <td>
                                <bean:message bundle="MEDIA_TYPES_KEY">
                                    <xsl:attribute name="key">
                                        <xsl:value-of select="@fieldName"/>
                                    </xsl:attribute>
                                </bean:message>
                            </td>
                            <td>
                                <xsl:choose>
                                    <!-- if the field has fieldType boolean, build a checkbox -->
                                    <xsl:when test="@fieldType='boolean'">
                                        <html:checkbox>
                                            <xsl:attribute name="property">
                                                <xsl:value-of select="@fieldName"/>
                                            </xsl:attribute>
                                        </html:checkbox>
                                    </xsl:when>
                                    <!-- if the field has attribute fieldSize "large" and fieldType is "string" then build a textarea input field -->
                                    <xsl:when test="@fieldSize='large' and @fieldType='string'">
                                        <html:textarea cols="30" rows="10">
                                            <xsl:attribute name="property">
                                                <xsl:value-of select="@fieldName"/>
                                            </xsl:attribute>
                                        </html:textarea>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <html:text>
                                            <xsl:attribute name="property">
                                                <xsl:value-of select="@fieldName"/>
                                            </xsl:attribute>
                                        </html:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </td>
                        </tr>
                   </xsl:for-each>
                   <tr>
                       <td colspan="2">
                            <html:submit value="Submit"/>
                       </td>
                   </tr>
                </table>
            </html:form>
     </block>
</doc>
    </xsl:template>
        <xsl:template name="capitaliseFirstLetter">
            <xsl:param name="word"/>
            <xsl:value-of select="translate (substring($word, 1, 1), 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>
            <xsl:value-of select="substring($word, 2)"/>
    </xsl:template>
   
    
</xsl:stylesheet> 