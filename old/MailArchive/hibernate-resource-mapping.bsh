/*
 *
 * Sourced from http://www.hibernate.org/72.html and modified
 *
 */
 
String basedirName = "build/src/conf";
print("Searching for hibernate files in " + basedirName);

String outFilename = "hibernate-resource-files.xml";
print("Outputting to " + outFilename);

void dumpFilename(String s) {
  out.println("<mapping resource=\"" + s + "\"/>");
}

String relativeName(String base, String name) {
  if (base.length() == 0 || name.length() == 0)
    return base + name;
  else
    return base + "/" + name;
}

void readDir(String relativePath) {
  // Combine relativePath with basedirName
  // to get get full path
  String fullName = relativeName(basedirName, relativePath);
  File dir = new File(fullName);

  // Get a listing of all directories
  // and all files ending in .hbm.xml
  //
  String[] list = dir.list(new FilenameFilter() {
    boolean accept(File dir, String name) {
      File f = new File(dir, name);
      if (f.isDirectory())
        return true;
      else if (f.isFile() && name.endsWith(".hbm.xml"))
    return true;
      else
        return false;
    }
  });

  count = 0;
  for (i=0; i<list.length; i++) {
    f = new File(fullName + "/" + list[i]);
    if (f.isFile()) {
      dumpFilename(relativeName(relativePath, f.getName()));
      count++;
    } else if (f.isDirectory()) {
      readDir(relativeName(relativePath, f.getName()));
    }
  }

  // Print out summary of what we found
  if (count > 0) {
    print("readDir: " + relativePath);
    print("Found Files: " + count);
  }
}

/**********************************************/
//                  MAIN

// Keep a backup copy of the current file.
mv("NoSuchFile", "hereNow");
mv(outFilename, outFilename+".bak");

File configFile = new File(outFilename);
PrintWriter out = new PrintWriter(new FileWriter(configFile));

readDir("");

// Close the config file we just created.
out.close();