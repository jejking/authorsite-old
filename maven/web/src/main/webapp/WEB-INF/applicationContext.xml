<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-2.0.xsd" default-autowire="byName">
    
    
    <aop:aspectj-autoproxy/>
    
    <tx:annotation-driven />        
    
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    
    <bean id="collectiveDao" class="org.authorsite.dao.CollectiveDaoJPA" />
    <bean id="individualDao" class="org.authorsite.dao.IndividualDaoJPA" />
    <bean id="systemUserDao" class="org.authorsite.dao.SystemUserDaoJPA" />
    
    <bean id="lifecycleTrackingAspect" class="org.authorsite.domain.aspects.LifecycleTrackingAspect" />
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.DerbyDialect" />
            </bean>
        </property>
    </bean>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
        <property name="url" value="jdbc:derby://localhost:1527/authorsite"/>
        <property name="username" value="authorsite"/>
        <property name="password" value="authorsite"/>
        <property name="poolPreparedStatements" value="true"/>
    </bean>
    
    
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField">
            <value>org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION</value>
        </property>
    </bean>
    <bean id="org.acegisecurity.acls.domain.BasePermission.READ" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField">
            <value>org.acegisecurity.acls.domain.BasePermission.READ</value>
        </property>
    </bean>
    <bean id="org.acegisecurity.acls.domain.BasePermission.DELETE" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField">
            <value>org.acegisecurity.acls.domain.BasePermission.DELETE</value>
        </property>
    </bean>
    <bean id="org.acegisecurity.acls.domain.BasePermission.CREATE" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField">
            <value>org.acegisecurity.acls.domain.BasePermission.CREATE</value>
        </property>
    </bean>
    <bean id="org.acegisecurity.acls.domain.BasePermission.WRITE" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField">
            <value>org.acegisecurity.acls.domain.BasePermission.WRITE</value>
        </property>
    </bean>
    
 
    <bean id="systemUserManagementService" class="org.authorsite.security.SystemUserManagementServiceImpl"/>
    
    <bean id="systemUserAclManager" class="org.authorsite.security.SystemUserAclManagerImpl"/>
    <bean id="individualAclManager" class="org.authorsite.domain.service.IndividualAclManagerImpl" />
    <bean id="individualManagementService" class="org.authorsite.domain.service.IndividualManagementServiceImpl"/>
    <bean id="collectiveManagementService" class="org.authorsite.domain.service.CollectiveManagementServiceImpl"/>    
        
    <!-- define authentication manager -->
    <bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
                <ref local="anonymousAuthenticationProvider"/>
            </list>
        </property>
    </bean>
    
    
    <!-- define dao auth provider -->
    <bean id="passwordEncoder" class="org.acegisecurity.providers.encoding.ShaPasswordEncoder">
        <constructor-arg type="int" value="256"/>
    </bean>
    
    <bean id="daoAuthenticationProvider" class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
        <property name="userDetailsService">
            <ref local="authorsiteUserDetailsService"/>
        </property>
        <property name="userCache">
            <ref local="userCache"/>
        </property>
        <property name="passwordEncoder">
            <ref local="passwordEncoder"/>
        </property>
        <property name="saltSource">
            <ref local="saltSource"/>
        </property>
    </bean>
    
    <!-- configure User details service? - its ref to systemUserDao should be autowired... -->
    <bean id="authorsiteUserDetailsService" class="org.authorsite.security.AuthorsiteUserDetailsService" />
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
    
    <bean id="userCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
            <ref local="cacheManager"/>
        </property>
        <property name="cacheName">
            <value>userCache</value>
        </property>
    </bean>
    
    <bean id="userCache" class="org.acegisecurity.providers.dao.cache.EhCacheBasedUserCache">
        <property name="cache">
            <ref local="userCacheBackend"/>
        </property>
    </bean>
    
    <bean id="saltSource" class="org.acegisecurity.providers.dao.salt.ReflectionSaltSource">
        <property name="userPropertyToUse">
            <value>getUsername</value>
        </property>
    </bean>
    
    <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter"/>
    
    <bean id="aclUserChangePasswordVoter" class="org.acegisecurity.vote.AclEntryVoter">
      <constructor-arg>
      	<ref bean="mutableAclService"/>
      </constructor-arg>
      <constructor-arg>
      	<value>ACL_USER_CHANGEPASSWORD</value>
      </constructor-arg>
      <constructor-arg>
      	<list>
          <ref local="org.acegisecurity.acls.domain.BasePermission.WRITE"/>
          <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
      	</list>
      </constructor-arg>
      <property name="processDomainObjectClass">
          <value>org.authorsite.security.SystemUser</value>
      </property>
   </bean>

   <bean id="aclIndividualAdminVoter" class="org.acegisecurity.vote.AclEntryVoter">
      <constructor-arg>
      	<ref bean="mutableAclService"/>
      </constructor-arg>
      <constructor-arg>
      	<value>ACL_INDIVIDUAL_ADMIN</value>
      </constructor-arg>
      <constructor-arg>
      	<list>
          <ref local="org.acegisecurity.acls.domain.BasePermission.WRITE"/>
          <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
      	</list>
      </constructor-arg>
      <property name="processDomainObjectClass">
          <value>org.authorsite.domain.Individual</value>
      </property>
   </bean> 
   
   
    
    <bean id="businessAccessDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions">
            <value>false</value>
        </property>
        <property name="decisionVoters">
            <list>
                <ref local="roleVoter"/>
                <ref local="aclUserChangePasswordVoter"/>
                <ref local="aclIndividualAdminVoter"/>
            </list>
        </property>
    </bean>
    
    <bean id="methodSecurityInterceptorAspect" class="org.authorsite.security.MethodSecurityInterceptorAspect">
        <property name="objectDefinitionSource">
            <ref local="objectDefinitionSource"/>
        </property>
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="businessAccessDecisionManager"/>
        </property>
    </bean>
    
    
    <bean id="attributes" class="org.acegisecurity.annotation.SecurityAnnotationAttributes"/>
    <bean id="objectDefinitionSource" class="org.acegisecurity.intercept.method.MethodDefinitionAttributes">
        <property name="attributes">
            <ref local="attributes"/>
        </property>
    </bean>
    
    <bean id="mutableAclService" class="org.acegisecurity.acls.jdbc.JdbcMutableAclService">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="lookupStrategy"/>
        <constructor-arg ref="aclCache"/>
    </bean>
    
    <bean id="aclCache" class="org.acegisecurity.acls.jdbc.EhCacheBasedAclCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager">
                    <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                </property>
                <property name="cacheName">
                    <value>aclCache</value>
                </property>
            </bean>
        </constructor-arg>
    </bean>
    
    <bean id="lookupStrategy" class="org.acegisecurity.acls.jdbc.BasicLookupStrategy">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="aclCache"/>
        <constructor-arg ref="aclAuthorizationStrategy"/>
        <constructor-arg>
            <bean class="org.acegisecurity.acls.domain.ConsoleAuditLogger"/>
        </constructor-arg>
    </bean>
    
    
    <bean id="aclAuthorizationStrategy" class="org.acegisecurity.acls.domain.AclAuthorizationStrategyImpl">
        <constructor-arg>
            <list>
                <bean class="org.acegisecurity.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMINISTRATOR"/>
                </bean>
                <bean class="org.acegisecurity.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMINISTRATOR"/>
                </bean>
                <bean class="org.acegisecurity.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMINISTRATOR"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    
    <!--  if you wish to use channel security, add "channelProcessingFilter," in front
	      of "httpSessionContextIntegrationFilter" in the list below -->
	<bean id="filterChainProxy" class="org.acegisecurity.util.FilterChainProxy">
      <property name="filterInvocationDefinitionSource">
         <value>
		    CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
		    PATTERN_TYPE_APACHE_ANT
            /**=httpSessionContextIntegrationFilter,logoutFilter,authenticationProcessingFilter,basicProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
         </value>
      </property>
    </bean>
    
     <!-- Automatically receives AuthenticationEvent messages -->
   <bean id="loggerListener" class="org.acegisecurity.event.authentication.LoggerListener"/>

   <bean id="basicProcessingFilter" class="org.acegisecurity.ui.basicauth.BasicProcessingFilter">
      <property name="authenticationManager">
          <ref local="authenticationManager"/>
      </property>
      <property name="authenticationEntryPoint">
          <ref local="basicProcessingFilterEntryPoint"/>
      </property>
   </bean>

   <bean id="basicProcessingFilterEntryPoint" class="org.acegisecurity.ui.basicauth.BasicProcessingFilterEntryPoint">
      <property name="realmName">
          <value>Contacts Realm</value>
      </property>
   </bean>

   <bean id="anonymousProcessingFilter" class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
      <property name="key">
          <value>foobar</value>
      </property>
      <property name="userAttribute">
          <value>anonymousUser,ROLE_ANONYMOUS</value>
      </property>
   </bean>

   <bean id="anonymousAuthenticationProvider" class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
      <property name="key">
          <value>foobar</value>
      </property>
   </bean>

   
   <bean id="httpSessionContextIntegrationFilter" class="org.acegisecurity.context.HttpSessionContextIntegrationFilter"/>
  
   <bean id="logoutFilter" class="org.acegisecurity.ui.logout.LogoutFilter">
      <constructor-arg value="/jsp/auth/loggedOut.jsp"/>
      <constructor-arg>
         <list>
              <bean class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler"/>
         </list>
      </constructor-arg><!-- URL redirected to after logout -->
   </bean>
   
   <bean id="securityContextHolderAwareRequestFilter" class="org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter"/>

   
   <bean id="exceptionTranslationFilter" class="org.acegisecurity.ui.ExceptionTranslationFilter">
      <property name="authenticationEntryPoint">
          <ref local="authenticationProcessingFilterEntryPoint"/>
      </property>
      <property name="accessDeniedHandler">
      	<bean class="org.acegisecurity.ui.AccessDeniedHandlerImpl">
      		<property name="errorPage" value="/jsp/auth/authFailed.jsp"/>
      	</bean>
      </property>
   </bean>

   <bean id="authenticationProcessingFilter" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
      <property name="authenticationManager">
          <ref bean="authenticationManager"/>
      </property>
      <property name="authenticationFailureUrl">
          <value>/auth/loginFailed</value>
      </property>
      <property name="defaultTargetUrl">
          <value>/index</value>
      </property>
      <property name="filterProcessesUrl">
          <value>/j_acegi_security_check</value>
      </property>
   </bean>

   <bean id="authenticationProcessingFilterEntryPoint" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
      <property name="loginFormUrl">
          <value>/auth/login</value>
      </property>
      <property name="forceHttps">
          <value>false</value>
      </property>
   </bean>

   <bean id="httpRequestAccessDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
      <property name="allowIfAllAbstainDecisions"><value>false</value></property>
      <property name="decisionVoters">
         <list>
            <ref bean="roleVoter"/>
         </list>
      </property>
   </bean>

   <!-- Note the order that entries are placed against the objectDefinitionSource is critical.
        The FilterSecurityInterceptor will work from the top of the list down to the FIRST pattern that matches the request URL.
        Accordingly, you should place MOST SPECIFIC (ie a/b/c/d.*) expressions first, with LEAST SPECIFIC (ie a/.*) expressions last -->
   <bean id="filterInvocationInterceptor" class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
      <property name="authenticationManager">
          <ref bean="authenticationManager"/>
      </property>
      <property name="accessDecisionManager">
          <ref local="httpRequestAccessDecisionManager"/>
      </property>
      <property name="objectDefinitionSource">
         <value>
			    CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
			    PATTERN_TYPE_APACHE_ANT
                            /admin/**=ROLE_ADMINISTRATOR
                            /dwr/admin/**=ROLE_ADMINISTRATOR
                            /edit/**=ROLE_EDITOR,ROLE_ADMINISTRATOR
                            /dwr/edit/**=ROLE_EDITOR,ROLE_ADMINISTRATOR
			    /**=ROLE_ANONYMOUS,ROLE_COMMUNITY,ROLE_EDITOR,ROLE_ADMINISTRATOR
         </value>
      </property>
   </bean>
   
    
</beans>